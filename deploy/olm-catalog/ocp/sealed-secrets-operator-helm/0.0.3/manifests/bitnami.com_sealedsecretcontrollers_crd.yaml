apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: sealedsecretcontrollers.bitnami.com
spec:
  group: bitnami.com
  names:
    kind: SealedSecretController
    listKind: SealedSecretControllerList
    plural: sealedsecretcontrollers
    singular: sealedsecretcontroller
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: SealedSecretController is the Schema for the sealed-secrets API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Defines the required fields to deploy a SealedSecretController
            properties:
              commandArgs:
                description: Set optional command line arguments passed to the controller process
                items:
                  type: string
                type: array
              networkPolicy:
                description: Whether to create a network policy that allows access to the service
                type: boolean
              nodeSelector:
                description: Identifies the nodes that should run this resource
                type: object
              podLabels:
                description: Provides labels to include in the resource
                type: object
              resources:
                description: CPU/Memory resource requests/limits
                type: object
              affinity:
                description: Provides additional constraints on pod placement
                type: object
              securityContext:
                description: Pod security parameters
                properties:
                  fsGroup:
                    description: Defines fsGroup for the operator Pod and its containers/processes run
                    type: string
                  runAsUser:
                    description: Defines under which user the operator Pod and its containers/processes run
                    type: string
                type: object
              rbac:
                description: RBAC definitions
                properties:
                  create:
                    description: "'true' if rbac resources should be created"
                    type: boolean
                  pspEnabled:
                    description: "'true' if psp resources should be created"
                    type: boolean
                type: object
              crd:
                description: Custom resource definitions
                properties:
                  create:
                    description: "'true' if crd resources should be created"
                    type: boolean
                  keep:
                    description: "'true' if the sealed secret CRD should be kept when the chart is deleted"
                    type: boolean
                type: object
              ingress:
                description: Defines the ingress controller for this resource
                properties:
                  annotations:
                    description: Ingress annotations
                    type: object
                  enabled:
                    description: Enables Ingress
                    type: boolean
                  hosts:
                    description: Ingress accepted hostnames
                    items:
                      type: string
                    type: array
                  path:
                    description: Ingress path
                    type: string
                  tls:
                    description: Ingress TLS configuration
                    items:
                      type: object
                    type: array
                type: object
              serviceAccount:
                description: Defines the service account for this resource
                properties:
                  create:
                    description: Whether to create a service account or not
                    type: boolean
                  name:
                    description: The name of the service account to create or use
                    type: string
                type: object
              image:
                description: Describes the images that should be run in the pod
                properties:
                  pullPolicy:
                    description: The image pull policy for the deployment
                    type: string
                  repository:
                    description: The repository to get the controller image from
                    type: string
                  tag:
                    description: The image tag to use for the deployment
                    type: string
                type: object
              secretName:
                description: The name of the TLS secret containing the key used to encrypt secrets
                type: string
              tolerations:
                items:
                  type: object
                type: array
              controller:
                descriptions: Should controller be deployed?
                properties:
                  create:
                    description: "'true' if Sealed Secrets controller resources should be created"
                    type: boolean
                type: object
              priorityClassName:
                description: Optional class to specify priority for pods
                type: string
              podAnnotations:
                description: Annotations to annotate pods with
                type: object
            type: object
          status:
            properties:
              conditions:
                description: "Current service state of pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions"
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's last transition.
                      type: string
                    status:
                      description: "Status is the status of the condition. Can be True, False, Unknown. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions"
                      type: string
                    type:
                      description: "Type is the type of the condition. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions"
                      type: string
                  requred:
                    - status
                    - type
                  type: object
                type: array
              deployedRelease:
                properties:
                  manifest:
                    type: string
                  name:
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
